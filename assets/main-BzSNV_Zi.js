(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const i of document.querySelectorAll('link[rel="modulepreload"]'))n(i);new MutationObserver(i=>{for(const r of i)if(r.type==="childList")for(const o of r.addedNodes)o.tagName==="LINK"&&o.rel==="modulepreload"&&n(o)}).observe(document,{childList:!0,subtree:!0});function s(i){const r={};return i.integrity&&(r.integrity=i.integrity),i.referrerPolicy&&(r.referrerPolicy=i.referrerPolicy),i.crossOrigin==="use-credentials"?r.credentials="include":i.crossOrigin==="anonymous"?r.credentials="omit":r.credentials="same-origin",r}function n(i){if(i.ep)return;i.ep=!0;const r=s(i);fetch(i.href,r)}})();/**
 * @license
 * SPDX-License-Identifier: Apache-2.0
*/const N=document.querySelector("form"),u=document.querySelector("#ingredients"),y=document.querySelector("#servings"),z=document.querySelector("#servings-decrement"),D=document.querySelector("#servings-increment"),_=document.querySelector("#meal-prep-toggle"),E=document.querySelector("#allergies"),w=document.querySelector("#suggestions"),a=document.querySelector("#voice-input-btn"),A=document.querySelector("#voice-error"),h=document.querySelector("#save-allergies-btn"),X=document.querySelector("#result-area"),d=document.querySelector("#results"),C=document.querySelector("#skeleton-loader"),T=document.querySelector("#recipe-list-view"),k=document.querySelector("#recipe-detail-view"),b=document.querySelector("#pagination-controls"),P=document.querySelector("#prev-page-btn"),H=document.querySelector("#next-page-btn"),Z=document.querySelector("#page-indicator"),O=document.querySelector("#history-container"),v=document.querySelector("#theme-switcher"),pe=document.getElementById("search-area"),ue=document.getElementById("favorites-area"),me=document.getElementById("shopping-list-area"),Y={search:document.getElementById("nav-search"),favorites:document.getElementById("nav-favorites"),shoppingList:document.getElementById("nav-shopping-list")},ge=[pe,ue,me],ee=Object.values(Y).filter(e=>e!==null),G=document.querySelector("#favorites-container"),$=document.querySelector("#shopping-list-container"),B=document.querySelector("#shopping-list-actions"),f=document.querySelector("#copy-shopping-list"),V=e=>{!d||!b||!C||(d.innerHTML=`<p class="error">${e}</p>`,b.classList.add("hidden"),C.classList.add("hidden"),d.scrollIntoView({behavior:"smooth"}))},te="recipe-app-history",se="recipe-app-favorites",ne="recipe-app-shopping-list",ie="recipe-app-allergies";let I=[],p=null,m=new Set,L=new Map,S=null;const re=VITE_GEMINI_API_KEY;if(!re)throw V("APIキーが設定されていません。"),new Error("API_KEY is not set");const he=new GoogleGenAI({apiKey:re}),fe=()=>{try{const e=localStorage.getItem(te);e&&(I=JSON.parse(e));const t=localStorage.getItem(se);t&&(m=new Set(JSON.parse(t)));const s=localStorage.getItem(ne);if(s){const r=JSON.parse(s);r.forEach(o=>{o[1].items=new Set(o[1].items)}),L=new Map(r)}const n=localStorage.getItem(ie);n&&E&&(E.value=n);const i=localStorage.getItem("recipe-app-theme");i==="dark"?(document.documentElement.classList.add("dark-mode"),v&&(v.checked=!0)):i==="light"?(document.documentElement.classList.remove("dark-mode"),v&&(v.checked=!1)):window.matchMedia("(prefers-color-scheme: dark)").matches&&v&&(v.checked=!0)}catch(e){console.error("Error loading state from local storage:",e)}},ye=()=>{localStorage.setItem(te,JSON.stringify(I))},ve=()=>{localStorage.setItem(se,JSON.stringify(Array.from(m)))},oe=()=>{const e=Array.from(L.entries()).map(([t,s])=>[t,{...s,items:Array.from(s.items)}]);localStorage.setItem(ne,JSON.stringify(e))},Le=e=>{localStorage.setItem(ie,e)},ae=(e,t)=>{const s=document.createElement("button");s.className="result-card",s.dataset.recipeId=e.id,s.innerHTML=`
        <div class="result-card-image" style="background-image: url('https://placehold.jp/30/cccccc/ffffff/300x200.png?text=${encodeURIComponent(e.recipeName)}')"></div>
        <div class="result-card-summary">
            <div class="result-card-text">
                <h3>${e.recipeName}</h3>
                <div class="recipe-meta">
                    <span>${e.cookingTime}</span>
                    <span>${e.servings}</span>
                </div>
            </div>
            <button class="like-btn" aria-label="お気に入りに追加" data-recipe-id="${e.id}">
                <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                    <path d="M20.84 4.61a5.5 5.5 0 0 0-7.78 0L12 5.67l-1.06-1.06a5.5 5.5 0 0 0-7.78 7.78l1.06 1.06L12 21.23l7.78-7.78 1.06-1.06a5.5 5.5 0 0 0 0-7.78z"></path>
                </svg>
            </button>
        </div>
    `;const n=s.querySelector(".like-btn");m.has(e.id)&&(n==null||n.classList.add("liked")),n==null||n.addEventListener("click",r=>{r.stopPropagation(),le(e.id),n.classList.toggle("liked"),Q(),M()});const i=()=>{F("search-area"),be(e,t)};return s.addEventListener("click",i),s.addEventListener("keydown",r=>{(r.key==="Enter"||r.key===" ")&&i()}),s},J=()=>{if(!p||!d)return;const e=p.pages[p.currentPageIndex];d.innerHTML="",e&&e.length>0?e.forEach(t=>{d.appendChild(ae(t,"search"))}):d.innerHTML='<p class="placeholder">レシピが見つかりませんでした。</p>',Se()},Se=()=>{if(!p||!b||!Z||!P||!H)return;const{currentPageIndex:e,pages:t}=p,s=t.length;s>1?(b.classList.remove("hidden"),Z.textContent=`${e+1} / ${s}`,P.disabled=e===0,H.disabled=e===s-1):b.classList.add("hidden")},ce=()=>{if(O){if(O.innerHTML="",I.length===0){O.innerHTML='<p class="placeholder">まだ履歴はありません。</p>';return}I.slice().reverse().forEach(e=>{const t=document.createElement("button");t.className="history-item",t.dataset.historyId=e.id,t.innerHTML=`
            <span class="history-ingredients">${e.query.ingredients}</span>
            <div class="history-meta">
                <span>${e.query.servings}人分</span>
                ${e.query.mealPrep?"<span>作り置き</span>":""}
                ${e.query.allergies?`<span>除外: ${e.query.allergies}</span>`:""}
            </div>
        `,t.addEventListener("click",()=>Ie(e.id)),O.appendChild(t)})}},le=e=>{m.has(e)?m.delete(e):m.add(e),ve()},Q=()=>{if(!G)return;if(G.innerHTML="",m.size===0){G.innerHTML='<p class="placeholder">お気に入りレシピはありません。</p>';return}I.flatMap(s=>s.pages).flat().filter(s=>m.has(s.id)).forEach(s=>{G.appendChild(ae(s,"favorites"))})},U=()=>{if(!(!$||!B)){if($.innerHTML="",L.size===0){$.innerHTML='<p class="placeholder">買い物リストは空です。</p>',B.classList.add("hidden");return}B.classList.remove("hidden");for(const[e,t]of L.entries()){const s=document.createElement("div");s.className="shopping-list-group";const n=Array.from(t.items).map(i=>`<li>${i}</li>`).join("");s.innerHTML=`
            <div class="shopping-list-group-header">
                <h3>${t.recipeInfo.recipeName}</h3>
                <button class="remove-recipe-btn" data-recipe-id="${e}">リストから削除</button>
            </div>
            <ul>${n}</ul>
        `,$.appendChild(s)}}},de=()=>{if(!w)return;const e=new Map;I.forEach(s=>{s.query.ingredients.split(/,|、|\s+/).map(i=>i.trim()).filter(i=>i).forEach(i=>{e.set(i,(e.get(i)||0)+1)})});const t=Array.from(e.entries()).sort((s,n)=>n[1]-s[1]).map(s=>s[0]).slice(0,7);w.innerHTML="",t.length>0?t.forEach(s=>{const n=document.createElement("button");n.type="button",n.className="suggestion-btn",n.textContent=s,w.appendChild(n)}):["鶏肉","豚肉","玉ねぎ","じゃがいも","にんじん","キャベツ","卵"].forEach(n=>{const i=document.createElement("button");i.type="button",i.className="suggestion-btn",i.textContent=n,w.appendChild(i)})},j=()=>{!T||!k||(k.classList.add("hidden"),T.classList.remove("hidden"),d==null||d.scrollIntoView({behavior:"smooth",block:"start"}))},be=(e,t)=>{var i,r,o;if(!T||!k)return;T.classList.add("hidden"),k.classList.remove("hidden");const s=e.ingredients.map(c=>`
        ${c.subHeading?`<h4 class="material-subheading">${c.subHeading}</h4>`:""}
        ${c.items.map(g=>`<li><label><input type="checkbox" data-ingredient="${g}"> ${g}</label></li>`).join("")}
    `).join(""),n=e.instructions.map((c,g)=>`<li><div class="step-number">${g+1}</div><p>${c}</p></li>`).join("");k.innerHTML=`
        <div class="recipe-detail-header">
             <button id="back-to-list-btn">◀ リストに戻る</button>
             <button id="detail-like-btn" class="like-btn ${m.has(e.id)?"liked":""}" aria-label="お気に入りに追加" data-recipe-id="${e.id}">
                <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                    <path d="M20.84 4.61a5.5 5.5 0 0 0-7.78 0L12 5.67l-1.06-1.06a5.5 5.5 0 0 0-7.78 7.78l1.06 1.06L12 21.23l7.78-7.78 1.06-1.06a5.5 5.5 0 0 0 0-7.78z"></path>
                </svg>
            </button>
        </div>
        <h2 class="recipe-detail-title">${e.recipeName}</h2>
        <div class="recipe-meta">
            <span>${e.cookingTime}</span>
            <span>${e.servings}</span>
        </div>
        ${e.description?`<p class="recipe-description">${e.description}</p>`:""}

        <h4>材料</h4>
        <p class="pantry-check-instruction">買い物リストに追加する材料にチェック！</p>
        <ul class="ingredient-list">${s}</ul>

        <h4>作り方</h4>
        <ol class="instructions-list">${n}</ol>

        <div class="detail-actions">
            <button id="add-to-shopping-list-from-detail">チェックした材料を買い物リストへ追加</button>
        </div>
    `,(i=document.getElementById("back-to-list-btn"))==null||i.addEventListener("click",()=>{t==="favorites"?F("favorites-area"):j()}),(r=document.getElementById("detail-like-btn"))==null||r.addEventListener("click",c=>{const g=c.currentTarget;le(e.id),g.classList.toggle("liked");const l=T==null?void 0:T.querySelector(`.result-card[data-recipe-id="${e.id}"] .like-btn`);l==null||l.classList.toggle("liked",m.has(e.id)),Q(),M()}),(o=document.getElementById("add-to-shopping-list-from-detail"))==null||o.addEventListener("click",()=>{const c=k.querySelectorAll('.ingredient-list input[type="checkbox"]:checked'),g=Array.from(c).map(x=>x.dataset.ingredient||""),l=document.getElementById("add-to-shopping-list-from-detail");if(l)if(g.length>0){const x={id:e.id,recipeName:e.recipeName},R=L.get(e.id)||{recipeInfo:x,items:new Set};g.forEach(W=>R.items.add(W)),L.set(e.id,R),oe(),U(),M(),l.textContent="追加しました！",l.disabled=!0,setTimeout(()=>{l.textContent="チェックした材料を買い物リストへ追加",l.disabled=!1},2e3)}else l.textContent="追加する材料を選択してください",l.disabled=!0,setTimeout(()=>{l.textContent="チェックした材料を買い物リストへ追加",l.disabled=!1},2e3)}),k.scrollIntoView({behavior:"smooth",block:"start"})},F=e=>{ge.forEach(n=>n==null?void 0:n.classList.add("hidden")),ee.forEach(n=>n==null?void 0:n.classList.remove("active"));const t=document.getElementById(e);t==null||t.classList.remove("hidden");const s=Y[e.replace("-area","")];s==null||s.classList.add("active"),e==="search-area"&&j()},Ee=async e=>{if(e.preventDefault(),!N||!u||!y||!_||!E||!C||!d||!X)return;const t=N.querySelector('button[type="submit"]');if(!t)return;const s=u.value.trim();if(!s){u.classList.add("invalid"),V("食材を入力してください。");return}u.classList.remove("invalid"),t.disabled=!0,t.textContent="考え中...",d.innerHTML="",b==null||b.classList.add("hidden"),C.classList.remove("hidden"),X.scrollIntoView({behavior:"smooth"});const n={ingredients:s,servings:y.value,mealPrep:_.checked,allergies:E.value.trim()};try{const{ingredients:i,servings:r,mealPrep:o,allergies:c}=n,g=`
            「${i}」を使ったレシピを5つ提案してください。
            - 人数: ${r}人前
            ${o?"- 作り置きに適したレシピを優先してください。":""}
            ${c?`- アレルギー/苦手な食材として「${c}」は絶対に使用しないでください。`:""}
            - レシピは多様なジャンルのものを提案してください。
            - 料理の簡単な説明を必ずdescriptionに含めてください。
            - レスポンスは必ず指定したJSONスキーマに従ってください。
        `,l={type:Type.ARRAY,items:{type:Type.OBJECT,properties:{recipeName:{type:Type.STRING,description:"料理名"},description:{type:Type.STRING,description:"料理の簡単な説明(2-3文)"},servings:{type:Type.STRING,description:'何人前かを示す文字列 (例: "2人分")'},cookingTime:{type:Type.STRING,description:'調理時間 (例: "約20分")'},ingredients:{type:Type.ARRAY,description:"材料のリスト。肉や野菜などの主要な材料と、調味料などを分けるためにsubHeadingを使用する。",items:{type:Type.OBJECT,properties:{subHeading:{type:Type.STRING,description:'材料の小見出し (例: "豚バラ肉", "合わせ調味料")。不要な場合は省略。'},items:{type:Type.ARRAY,items:{type:Type.STRING,description:'材料とその分量 (例: "豚バラ薄切り肉 200g")'}}},required:["items"]}},instructions:{type:Type.ARRAY,description:"作り方の手順リスト",items:{type:Type.STRING}}},required:["recipeName","servings","cookingTime","ingredients","instructions","description"]}},x=await he.models.generateContentStream({model:"gemini-2.5-flash",contents:g,config:{responseMimeType:"application/json",responseSchema:l}});let R="";for await(const q of x)R+=q.text;const K=JSON.parse(R).map(q=>({...q,id:`recipe-${Date.now()}-${Math.random()}`}));if(K&&K.length>0){const q={id:`history-${Date.now()}`,query:n,pages:[K],currentPageIndex:0};I.push(q),p=q,ye(),ce(),de(),J(),j()}else V("条件に合うレシピが見つかりませんでした。")}catch(i){console.error("Gemini API call failed:",i),V("レシピの取得中にエラーが発生しました。時間をおいて再試行してください。")}finally{C.classList.add("hidden"),t.disabled=!1,t.textContent="提案してもらう"}},Ie=e=>{const t=I.find(s=>s.id===e);t&&(p=t,u&&(u.value=t.query.ingredients),y&&(y.value=t.query.servings),_&&(_.checked=t.query.mealPrep),E&&(E.value=t.query.allergies),J(),j(),F("search-area"),d==null||d.scrollIntoView({behavior:"smooth"}))},M=()=>{var s,n;const e=(s=Y.favorites)==null?void 0:s.querySelector(".badge"),t=(n=Y.shoppingList)==null?void 0:n.querySelector(".badge");e&&(m.size>0?(e.textContent=String(m.size),e.classList.remove("hidden")):e.classList.add("hidden")),t&&(L.size>0?(t.textContent=String(L.size),t.classList.remove("hidden")):t.classList.add("hidden"))},Te=()=>{fe(),ce(),de(),Q(),U(),M(),N==null||N.addEventListener("submit",Ee),z==null||z.addEventListener("click",()=>{y==null||y.stepDown()}),D==null||D.addEventListener("click",()=>{y==null||y.stepUp()}),w==null||w.addEventListener("click",t=>{const s=t.target;if(s.classList.contains("suggestion-btn")&&u){const n=u.value.trim();u.value=n?`${n}、${s.textContent}`:s.textContent||""}}),h==null||h.addEventListener("click",()=>{E&&h&&(Le(E.value),h.textContent="保存済み",h.classList.add("saved"),h.disabled=!0,setTimeout(()=>{h&&(h.textContent="保存",h.classList.remove("saved"),h.disabled=!1)},2e3))}),P==null||P.addEventListener("click",()=>{p&&p.currentPageIndex>0&&(p.currentPageIndex--,J())}),H==null||H.addEventListener("click",()=>{p&&p.currentPageIndex<p.pages.length-1&&(p.currentPageIndex++,J())}),ee.forEach(t=>{t==null||t.addEventListener("click",()=>{if(t){const s=t.id.replace("nav-","");F(`${s}-area`)}})}),$==null||$.addEventListener("click",t=>{const s=t.target;if(s.classList.contains("remove-recipe-btn")){const n=s.dataset.recipeId;n&&(L.delete(n),oe(),U(),M())}}),f==null||f.addEventListener("click",()=>{let t=`買い物リスト
==========

`;L.forEach(s=>{t+=`■ ${s.recipeInfo.recipeName}
`,Array.from(s.items).forEach(n=>{t+=`- ${n}
`}),t+=`
`}),navigator.clipboard.writeText(t).then(()=>{f&&(f.textContent="コピーしました！",f.disabled=!0,setTimeout(()=>{f&&(f.textContent="リストをコピー",f.disabled=!1)},2e3))}).catch(s=>{console.error("Failed to copy text: ",s),f&&(f.textContent="コピー失敗")})}),v==null||v.addEventListener("change",()=>{v.checked?(document.documentElement.classList.add("dark-mode"),localStorage.setItem("recipe-app-theme","dark")):(document.documentElement.classList.remove("dark-mode"),localStorage.setItem("recipe-app-theme","light"))});const e=window.SpeechRecognition||window.webkitSpeechRecognition;if(e){S=new e,S.continuous=!1,S.lang="ja-JP",S.interrimResults=!1;const t=r=>{A&&(A.textContent=r,A.classList.remove("hidden"))},s=()=>{A&&A.classList.add("hidden")},n=()=>{t("マイクがブロックされています。ブラウザの設定で、このサイトへのマイクアクセスを許可してください。"),a&&(a.disabled=!0,a.setAttribute("aria-label","音声入力 (マイクがブロックされています)"),a.setAttribute("title","マイクへのアクセスがブロックされています"))},i=()=>{s(),a&&(a.disabled=!1,a.setAttribute("aria-label","音声入力"),a.setAttribute("title","音声入力"))};navigator.permissions?navigator.permissions.query({name:"microphone"}).then(r=>{const o=()=>{r.state==="denied"?n():i()};o(),r.onchange=o}).catch(r=>{console.warn("Could not query microphone permissions. Relying on onerror.",r),i()}):i(),S.onresult=r=>{const o=r.results[0][0].transcript.replace(/。/g,"");if(u){const c=u.value.trim();u.value=c?`${c}、${o}`:o}},S.onerror=r=>{console.error("Speech recognition error",r.error);let o="音声認識中にエラーが発生しました。";r.error==="not-allowed"?n():r.error==="no-speech"?(o="音声が聞き取れませんでした。もう一度お試しください。",t(o)):r.error==="network"?(o="ネットワークエラーが発生しました。接続を確認してください。",t(o)):r.error==="service-not-allowed"?(o="セキュリティ上の理由により、音声認識は利用できません。サイトがHTTPSで提供されていることを確認してください。",t(o),a&&(a.disabled=!0)):t(o)},S.onend=()=>{a==null||a.classList.remove("is-listening")},a==null||a.addEventListener("click",()=>{S&&a&&!a.disabled&&(s(),a.classList.add("is-listening"),S.start())})}else console.warn("Speech Recognition API not supported."),a==null||a.remove()};document.addEventListener("DOMContentLoaded",Te);
